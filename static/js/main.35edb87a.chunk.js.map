{"version":3,"sources":["logo.png","components/ExampleForm.js","components/ExampleNotices.js","components/ExampleUpload.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ExampleForm","_useState","useState","fields","loading","_useState2","Object","slicedToArray","state","setState","id","props","label","type","value","name","comp","TextControl","about","TextareaControl","selected","rate","options","RadioControl","color","SelectControl","checked","terms","CheckboxControl","getFields","react_default","a","createElement","length","map","item","i","key","className","assign","onChange","objectValue","objectSpread","build_module","isPrimary","focus","onClick","isBusy","isDefault","ExampleNotices","notices","snackbars","push","content","status","notice","actions","alert","url","ExampleUpload","file","accept","icon","e","target","files","onFilesDrop","URL","createObjectURL","src","alt","ImagePreview","AppTabs","title","App","logo","activeClass","tabs","tab","TabComponent","tabsItem","RenderTab","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35edb87a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f91b5c1e.png\";","import React, { useState } from 'react';\nimport { \n    Button, \n    TextControl, \n    TextareaControl, \n    RadioControl, \n    CheckboxControl, \n    SelectControl \n} from '@wordpress/components';\n\nfunction getFields( state ) {\n    const fields = state.fields;\n    return [\n        {\n            id: 'name',\n            props: {\n                label: 'Name',\n                type: 'text',\n                value: state ? fields.name || '' : ''\n            },\n            comp: TextControl\n        },\n        {\n            id: 'about',\n            props: {\n                label: 'About',\n                value: state ? fields.about || '' : ''\n            },\n            comp: TextareaControl\n        },\n        {\n            id: 'rate',\n            props: {\n                label: 'Rate',\n                selected: state ? fields.rate || '1' : '1',\n                options: [\n                    { label: '1', value: '1' },\n                    { label: '2', value: '2' },\n                    { label: '3', value: '3' },\n                    { label: '4', value: '4' },\n                    { label: '5', value: '5' },\n                ]\n                \n            },\n            comp: RadioControl\n        },\n        {\n            id: 'color',\n            props: {\n                label: 'Color',\n                selected: state ? fields.color || 'green' : 'green',\n                options: [\n                    { label: 'Green', value: 'green' },\n                    { label: 'Blue', value: 'blue' },\n                    { label: 'Red', value: 'red' }\n                ]\n                \n            },\n            comp: SelectControl\n        },\n        {\n            id: 'terms',\n            props: {\n                label: 'Terms',\n                checked: state ? fields.terms || false : false,\n                \n            },\n            comp: CheckboxControl\n        }\n    ];\n}\n\nfunction ExampleForm() {\n  const [ state, setState ] = useState({ \n      fields: {}, \n      loading:false,\n  });\n  const fields = getFields( state );\n \n  return (<form>\n        { \n            fields.length && fields.map( ( item, i  ) => {\n   \n                return <div key={i} className=\"field\">\n                    <item.comp { ...item.props } onChange={ \n                        ( value ) => {\n                            let objectValue = {};\n                            objectValue[ item.id ] = value;\n                            const fields = { ...state.fields, ...objectValue };\n                \n                            setState({\n                                ...state,\n                                ...{ fields: fields }\n                            });\n                        }} />\n                </div>;\n            })\n        }\n        <div className=\"form-actions\">\n            <Button \n                isPrimary\n                focus={ 'undefined' }\n                onClick={ () => { setState( { loading:true } ) } }\n                isBusy={ state.loading }>\n                Submit\n            </Button>\n\n            <Button isDefault onClick={ () => setState({ fields: {} })}>Clear</Button>\n        </div>\n  </form>);\n}\n\nexport default ExampleForm;\n","import React, { useState } from 'react';\nimport { \n    Notice,\n    Snackbar,\n    NoticeList,\n    SnackbarList,\n    Button\n} from '@wordpress/components';\n\n\nfunction ExampleNotices() {\n    const [ state, setState ] = useState({ \n        notices: [], \n        snackbars: []\n    });\n  return (<div className=\"notices\">\n        <div className=\"notice-actions\">\n            <Button isPrimary onClick={() => {\n                var notice = { \n                    id: 'notice',\n                    content: 'Notice',\n                    status: 'success' \n                };\n                let notices = state.notices;\n                notices.push( notice );\n                setState( { ...state, ...{ notices: notices } } );\n            }}>Success Notice</Button>\n\n            <Button isPrimary onClick={() => {\n                var notice = { \n                    id: 'notice_error',\n                    content: 'Error Notice',\n                    status: 'error' \n                };\n                let notices = state.notices;\n                notices.push( notice );\n                setState( { ...state, ...{ notices: notices } } );\n            }}>Error Notice</Button>\n\n            <Button isPrimary onClick={() => {\n                var notice = { \n                    id: 'notice_info',\n                    content: 'Info Notice',\n                    status: 'info' \n                };\n                let notices = state.notices;\n                notices.push( notice );\n                setState( { ...state, ...{ notices: notices } } );\n            }}>Info Notice</Button>\n\n            <Button isPrimary onClick={() => {\n                var notice = { \n                    id: 'notice_warning',\n                    content: 'Warning Notice',\n                    status: 'warning',\n                    actions: [\n                        {\n                            label: 'Alert',\n                            onClick: () => { alert('aha'); }\n                        },\n                        {\n                            label: 'Link',\n                            url: 'https://ibenic.com'\n                        }\n                    ]\n                };\n                let notices = state.notices;\n                notices.push( notice );\n                setState( { ...state, ...{ notices: notices } } );\n            }}>Warning Notice</Button>\n\n            <Button isPrimary onClick={() => {\n                var notice = { \n                    id: 'notice_warning',\n                    content: 'Snackbar',\n                    status: 'warning'\n                    \n                };\n                let notices = state.snackbars;\n                notices.push( notice );\n                setState( { ...state, ...{ snackbars: notices } } );\n            }}>Snackbar</Button>\n        </div>\n    \n        <NoticeList\n\t\t    notices={ state.notices }\n\t\t/>\n        <SnackbarList\n\t\t\tnotices={ state.snackbars }\n\t\t/>\n        \n  </div>);\n}\n\nexport default ExampleNotices;\n","import React, { useState } from 'react';\nimport { \n    FormFileUpload,\n    DropZone,\n    DropZoneProvider\n} from '@wordpress/components';\n\nfunction ImagePreview( file ) {\n    if ( ! file ) {\n        return '';\n    }\n    const url = URL.createObjectURL(file);\n    return <img src={ url } alt='Preview' />\n}\nfunction ExampleUpload() {\n    const [ state, setState ] = useState({ \n        file: null\n    });\n  return (<div className=\"upload\">\n    <DropZoneProvider>\n        <FormFileUpload\n\t\taccept=\"image/*\"\n        icon='format-image'\n\t\tonChange={ ( e ) => setState( { file: e.target.files[0]} ) }\n\t    >\n\t\tSelect an Image or Drop it here\n\t    </FormFileUpload>\n        \n            <DropZone \n                onFilesDrop={ ( files ) => setState( { file: files[0]} ) }\n            />\n\n        { ImagePreview( state.file ) }\n        </DropZoneProvider>\n  </div>);\n}\n\nexport default ExampleUpload;\n","import React from 'react';\nimport './App.scss';\nimport logo from './logo.png';\nimport { TabPanel, SlotFillProvider, Slot, Fill } from '@wordpress/components';\nimport ExampleForm from './components/ExampleForm';\nimport ExampleNotices from './components/ExampleNotices';\nimport ExampleUpload from './components/ExampleUpload';\n\nfunction RenderTab( tab ) {\n  const tabs = AppTabs();\n  let TabComponent = ExampleForm; // Default.\n  for( let i = 0; i < tabs.length; i++ ) {\n    let tabsItem = tabs[ i ];\n    if ( tab.name === tabsItem.name ) {\n      TabComponent = tabsItem.comp;\n      break;\n    }\n  }\n\n  return <Fill name=\"TabContentSlot\"><TabComponent /></Fill>\n}\n\nfunction AppTabs() {\n  return [\n    {\n      name: 'example1',\n      title: 'Example Form',\n      comp: ExampleForm\n    },\n    {\n      name: 'example2',\n      title: 'Example Notices',\n      comp: ExampleNotices\n    },\n    {\n      name: 'example3',\n      title: 'Example Upload',\n      comp: ExampleUpload\n    }\n  ]\n}\n\nfunction App() {\n  \n  return (\n      <SlotFillProvider>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img className=\"logo\" src={logo} alt=\"logo\" />\n            <h1>Gutenberg Components outside of the Editor</h1>\n            <h2>JavaScript for WordPress 2019</h2>\n            \n            <TabPanel className=\"my-tab-panel\"\n              activeClass=\"active-tab\" \n              tabs={ AppTabs() }>\n              { (tab) => RenderTab(tab) }\n            </TabPanel>\n          </header>\n          <main>\n            <Slot name=\"TabContentSlot\"/>\n          </main>\n        </div>\n      </SlotFillProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}